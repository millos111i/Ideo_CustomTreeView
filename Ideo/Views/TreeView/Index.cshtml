@model IEnumerable<Ideo.Models.TreeView>

@{
    ViewBag.Title = "Index";
}

@helper Show(Ideo.Models.TreeView tree)
{
    <li>
        @{
            var list = tree.Children.Where(treeData => treeData.ParentID != null).ToList();
            if (list.Count > 0)
            {
                @Html.DisplayFor(model => tree.Text)
                <div class="btn-group" role="group" aria-label="...">
                    <button type="button" class="glyphicon glyphicon-plus"
                            onclick="location.href='@Url.Action("Create", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-minus"
                            onclick="location.href='@Url.Action("Delete", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-list-alt"
                            onclick="location.href='@Url.Action("Details", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-pencil"
                            onclick="location.href='@Url.Action("Edit", "TreeView", new { id = tree.Id })'" />
                </div>
                <ul>
                    @foreach (var t in tree.Children.Where(tr => tr.ParentID != null))
                    {
                        @Show(t);
                    }
                </ul>
            }
            else
            {
                @Html.DisplayFor(model => tree.Text)
                <div class="btn-group" role="group" aria-label="...">
                    <button type="button" class="glyphicon glyphicon-plus"
                            onclick="location.href='@Url.Action("Create", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-minus"
                            onclick="location.href='@Url.Action("Delete", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-list-alt"
                            onclick="location.href='@Url.Action("Details", "TreeView", new { id = tree.Id })'" />
                    <button type="button" class="glyphicon glyphicon-pencil"
                            onclick="location.href='@Url.Action("Edit", "TreeView", new { id = tree.Id })'" />
                </div>
            }
        }
    </li>
}

<h2>Index</h2>
<p>
    @Html.ActionLink("Create New Root", "Create")
</p>

<div class="tree">
    <ul class="mainList">
        @foreach (var data in Model.Where(treeData => treeData.ParentID == null))
        {
            @Show(data);
        }
    </ul>
</div>

